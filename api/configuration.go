/*
 * Aspose.Words Cloud API Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 19.11.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package api

import (
	"encoding/json"
	"io/ioutil"
	"net/http"
)

// contextKeys are used to identify the type of value in the context.
// Since these are string, it is possible to get a short description of the
// context key for logging and debugging using key.String().

type contextKey string

func (c contextKey) String() string {
	return "auth " + string(c)
}

var (
	// ContextOAuth2 takes a oauth2.TokenSource as authentication for the request.
	ContextOAuth2 = contextKey("token")

	// ContextBasicAuth takes BasicAuth as authentication for the request.
	ContextBasicAuth = contextKey("basic")

	// ContextAccessToken takes a string oauth2 access token as authentication for the request.
	ContextAccessToken = contextKey("accesstoken")

	// ContextAPIKey takes an APIKey as authentication for the request
	ContextAPIKey = contextKey("apikey")
)

// BasicAuth provides basic http authentication to a request passed via context using ContextBasicAuth
type BasicAuth struct {
	UserName string `json:"userName,omitempty"`
	Password string `json:"password,omitempty"`
}

// APIKey provides API key based authentication to a request passed via context using ContextAPIKey
type APIKey struct {
	Key    string
	Prefix string
}

type Configuration struct {
	BaseUrl       string            `json:"BasePath,omitempty"`
	AppKey        string            `json:"AppKey"`
	AppSid        string            `json:"AppSid"`
	DebugMode     bool              `json:"DebugMode,omitempty"`
	DefaultHeader map[string]string `json:"DefaultHeader,omitempty"`
	HttpClient    *http.Client
}

func NewConfiguration(configFilePath string) (pConfig *Configuration, err error) {

	data, err := ioutil.ReadFile(configFilePath)

	if err != nil {
		return nil, err
	}

	cfg := Configuration{
		BaseUrl:       "https://api.aspose.cloud/v4.0",
		DebugMode:     false,
		DefaultHeader: map[string]string{"x-aspose-client": "go sdk", "x-aspose-client-version": "19.11"},
	}
	err = json.Unmarshal(data, &cfg)

	if err != nil {
		return nil, err
	}

	return &cfg, nil
}
